<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f1dfb3aa-7d89-4433-bbf4-8fa07fc71989" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>individual_time_interval</find>
      <find>select_action</find>
      <find>Compute_Interference</find>
      <find>update_shadow</find>
      <find>random.sample</find>
      <find>np.random</find>
      <find>random</find>
      <find>Train_Step_Interval</find>
      <find>V2I_Sum_Rate_threshold</find>
      <find>test_seed_sequence</find>
      <find>Curr_Opt_Reward</find>
      <find>learnRate</find>
      <find>observe</find>
      <find>Data_Dir</find>
      <find>curr_Result_Dir</find>
      <find>Num_BS_Output</find>
      <find>huber_loss</find>
      <find>select_action_while_training</find>
      <find>generate_d2d_transition_while_evaluation</find>
      <find>fixed_epsilon</find>
      <find>Fixed_Epsilon</find>
      <find>select_action_while_evaluation</find>
      <find>Evaluation_Episode_Interval</find>
      <find>For Training Process Evaluation</find>
      <find>Constant_A</find>
      <find>Expect_Return</find>
      <find>Curr_Sum_Rate_Indicator</find>
      <find>Curr_FB_Action</find>
      <find>Opt_V2I_Sum_Rate</find>
      <find>201</find>
    </findStrings>
  </component>
  <component name="ProjectId" id="1TXWWmp3cVxkzDNWViHYTxvYMy6" />
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../D-Decision/Dist-Dec-RealFB" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\LWang\SimProgram\Simulation-Dropbox\D2D-BS-RL-V8-Run-S-LargerBatch-MultiTransitions-AutoReTrain-Batch-256-Gamma-0.5" />
      <recent name="C:\LWang\SimProgram\Simulation-Dropbox\D2D-BS-RL-V6-Run-S-LargerBatch-MultiTransitions-AutoReTrain" />
      <recent name="C:\LWang\SimProgram\Simulation-Dropbox\D2D-BS-RL-V5-Run" />
      <recent name="C:\LWang\Dropbox\Research-GT\Simulation\D2D-BS-RL-V3-Run" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.RL_Run_main">
    <configuration name="ErrorShade_Plot_main-V2" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="D2D-BS-RL-V0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ErrorShade_Plot_main-V2.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="ErrorShade_Plot_main" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="D2D-BS-RL-V0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ErrorShade_Plot_main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="RL_Evaluated_main_Epsilon_DiffTrails" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="D2D-BS-RL-V0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/RL_Evaluated_main_Epsilon_DiffTrails.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="RL_Run_main" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="D2D-BS-RL-V0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/RL_Run_main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="RL_Train_main" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="D2D-BS-RL-V0" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/RL_Train_main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.RL_Evaluated_main_Epsilon_DiffTrails" />
      <item itemvalue="Python.ErrorShade_Plot_main" />
      <item itemvalue="Python.ErrorShade_Plot_main-V2" />
      <item itemvalue="Python.RL_Train_main" />
      <item itemvalue="Python.RL_Run_main" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.RL_Run_main" />
        <item itemvalue="Python.RL_Train_main" />
        <item itemvalue="Python.ErrorShade_Plot_main-V2" />
        <item itemvalue="Python.ErrorShade_Plot_main" />
        <item itemvalue="Python.RL_Evaluated_main_Epsilon_DiffTrails" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f1dfb3aa-7d89-4433-bbf4-8fa07fc71989" name="Default Changelist" comment="" />
      <created>1550870214650</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1550870214650</updated>
    </task>
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/RL_Auto_ReTrain_main.py</url>
          <line>161</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Plot_main.py</url>
          <line>396</line>
          <option name="timeStamp" value="25" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ErrorShade_Plot_main-V2.py</url>
          <line>434</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/ErrorShade_Plot_main-V2.py</url>
          <line>280</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>x_max = Num_Run_Episodes * 5
my_x_ticks = np.arange(0, x_max, 5)
# my_y_ticks = np.arange(-2, 2, 0.3)
# plot the results
Curr_OS = os.name
if Curr_OS == 'nt':
    Fig_Dir = folder
# x = range(Num_Run_Episodes)
x = my_x_ticks
y = Expect_Return
y1 = RA_Expect_Return
# plot the results
plt.figure()
plt.plot(x, y, color='red', marker='x', label='DNN-RL')
plt.plot(x, y1, color='green', marker='o', label='Random Action')
plt.xlabel(&quot;Number of Episodes&quot;, fontsize=12)
plt.ylabel(&quot;Return per Episode&quot;, fontsize=12)
plt.grid(True)
# plt.xticks(my_x_ticks)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# plt.title(&quot;RL Testing Results&quot;)
plt.legend()

# plot the results normalize these return to see the gain percentage  Feb. 24 2019
# x = range(Num_Run_Episodes)
# may need further fixing
y = Expect_Return
plt.figure()
# plt.plot(x, y)
x = my_x_ticks
plt.plot(x, y, color='red', marker='x', label='DNN-RL')
# plt.plot(x, y1, color='green', label='Random Action')
plt.xlabel(&quot;Number of Episodes&quot;, fontsize=12)
plt.ylabel(&quot;Return per Episode&quot;, fontsize=12)
# open the grid
plt.grid(True)
# plt.title(&quot;RL Testing Results&quot;)
# plt.xticks(my_x_ticks)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.legend()
# Fig_Dir = 'C:\\LWang\\D2D-BS-RL-Results\\'
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>x_max = Num_Run_Episodes * 5
my_x_ticks = np.arange(0, x_max, 5)
x = my_x_ticks
y = Expect_Return
y1 = RA_Expect_Return
# plot the results
plt.figure()
plt.plot(x, y, color='red', marker='x', label='DNN-RL')
plt.plot(x, y1, color='green', marker='o', label='Random Action')
plt.xlabel(&quot;Number of Episodes&quot;, fontsize=12)
plt.ylabel(&quot;Return per Episode&quot;, fontsize=12)
plt.grid(True)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# plt.title(&quot;RL Testing Results&quot;)
plt.legend()
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>x_max = Num_Run_Episodes * 5
my_x_ticks = np.arange(5, x_max, 5)
x = my_x_ticks
y = Expect_Return
y1 = RA_Expect_Return
# plot the results
plt.figure()
plt.plot(x, y, color='red', marker='x', label='DNN-RL')
plt.plot(x, y1, color='green', marker='o', label='Random Action')
plt.xlabel(&quot;Number of Episodes&quot;, fontsize=12)
plt.ylabel(&quot;Return per Episode&quot;, fontsize=12)
plt.grid(True)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# plt.title(&quot;RL Testing Results&quot;)
plt.legend()
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>np.arange(5, 40, 5)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Evaluation_Episode_Interval = 10
x = range(Evaluation_Episode_Interval-1, Num_Episodes-1, Evaluation_Episode_Interval)
y = Evaluated_Reward_Per_Episode[x]
# plot the Q mean and Q max mean results of the target value Y
# x = range(Num_Episodes)
# y = Train_Q_mean_per_Episode
# y1 = Train_Q_max_mean_per_Episode
plt.figure()
plt.plot(x, y, color='red', marker='x', label='Evaluated Reward per episode')
# plt.plot(x, y1, color='blue', label='Q-max mean')
plt.xlabel(&quot;Number of Episodes&quot;)
plt.ylabel(&quot;Return per Episode&quot;)
# open the grid
plt.grid(True)
plt.title(&quot;Evaluated Reward per episode in Training with epsilon = 0.05&quot;)
plt.legend()
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Evaluation_Episode_Interval = 10
x = range(Evaluation_Episode_Interval-1, Num_Episodes-1, Evaluation_Episode_Interval)
y = Evaluated_Reward_Per_Episode[x]
# plot the Q mean and Q max mean results of the target value Y
# x = range(Num_Episodes)
# y = Train_Q_mean_per_Episode
# y1 = Train_Q_max_mean_per_Episode
plt.figure()
plt.plot(x, y, color='red', marker='x', label='DNN-RL')
# plt.plot(x, y1, color='blue', label='Q-max mean')
plt.xlabel(&quot;Number of Episodes&quot;)
plt.ylabel(&quot;Return per Episode&quot;)
# open the grid
plt.grid(True)
plt.title(&quot;Evaluated Reward per episode in Training with epsilon = 0.05&quot;)
plt.legend()
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Evaluation_Episode_Interval = 10
x = range(Evaluation_Episode_Interval-1, Num_Episodes-1, Evaluation_Episode_Interval)
y = Evaluated_Reward_Per_Episode[x]
# plot the Q mean and Q max mean results of the target value Y
# x = range(Num_Episodes)
# y = Train_Q_mean_per_Episode
# y1 = Train_Q_max_mean_per_Episode
plt.figure()
plt.plot(x, y, color='blue', label='DNN-RL')
# plt.plot(x, y1, color='blue', label='Q-max mean')
plt.xlabel(&quot;Number of Episodes&quot;)
plt.ylabel(&quot;Return per Episode&quot;)
# open the grid
plt.grid(True)
plt.title(&quot;Evaluated Reward per episode in Training with epsilon = 0.05&quot;)
plt.legend()
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Evaluated_Reward_Per_Episode[range(9,39,10)]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>range(9,39,10)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>np.arange(10,100,10)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>BS_Agent.brain.model</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>D1_Dense1_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Pre_Binary_D1_Output_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Binary_D1_Output_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>BS_Dense1_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>BS_output_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>BS_Input_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>D1_Output_evaluated_gradients</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>tf.reshape(x_bin_grad_control, shape=tf.shape(x))</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>